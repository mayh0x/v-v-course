// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class RemoverprodutoTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void removerproduto() {
    driver.get("https://lista-de-compras-mayh0xs-projects.vercel.app");
    driver.manage().window().setSize(new Dimension(1920, 1080));
    assertThat(driver.findElement(By.cssSelector(".text-gray-400")).getText(), is("Nenhum produto cadastrado."));
    driver.findElement(By.cssSelector(".shadow:nth-child(3)")).sendKeys("Feijão");
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".text-gray-700"));
      dropdown.findElement(By.xpath("//option[. = 'Comida']")).click();
    }
    driver.findElement(By.cssSelector(".mb-4:nth-child(3) > .shadow")).sendKeys("10");
    driver.findElement(By.cssSelector(".mb-4:nth-child(4) > .shadow")).sendKeys("2");
    driver.findElement(By.cssSelector(".mb-4:nth-child(5) > .shadow")).sendKeys("1000");
    driver.findElement(By.cssSelector(".bg-blue-500:nth-child(6)")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 10);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".whitespace-nowrap:nth-child(7)")));
    }
    assertThat(driver.findElement(By.cssSelector(".whitespace-nowrap:nth-child(1)")).getText(), is("Feijão"));
    assertThat(driver.findElement(By.cssSelector(".capitalize")).getText(), is("Comida"));
    assertThat(driver.findElement(By.cssSelector(".whitespace-nowrap:nth-child(3)")).getText(), is("R$ 10.00"));
    assertThat(driver.findElement(By.cssSelector(".whitespace-nowrap:nth-child(4)")).getText(), is("2 un"));
    assertThat(driver.findElement(By.cssSelector(".whitespace-nowrap:nth-child(5)")).getText(), is("1000 g"));
    assertThat(driver.findElement(By.cssSelector(".whitespace-nowrap:nth-child(6)")).getText(), is("-"));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".w-16"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bg-green-500"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bg-yellow-500"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bg-blue-500:nth-child(4)"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bg-red-500:nth-child(5)"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".bg-red-500:nth-child(1)"));
      assert(elements.size() > 0);
    }
    driver.findElement(By.cssSelector(".bg-red-500:nth-child(5)")).click();
    {
      WebDriverWait wait = new WebDriverWait(driver, 10);
      wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".text-gray-400")));
    }
    assertThat(driver.findElement(By.cssSelector(".text-gray-400")).getText(), is("Nenhum produto cadastrado."));
  }
}
